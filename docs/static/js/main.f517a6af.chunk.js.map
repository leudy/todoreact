{"version":3,"sources":["hooks/todoReducer.js","hooks/Types.js","TodoItem.js","TodoList.js","AddTodo.js","hooks/useForm.js","TodoApp.js","index.js"],"names":["todoReducer","state","action","type","payload","filter","f","id","map","todo","done","TodoItem","handleToggle","handleDelete","idx","key","className","style","borderBlockColor","onClick","desc","TodoList","todos","t","i","AddTodo","handleAdd","initialState","useState","values","setvalues","reset","handleInputChange","target","name","value","useForm","description","onSubmit","preventDefault","newTodo","Date","getTime","placeholder","onChange","width","marginLeft","init","JSON","parse","localStorage","getItem","TodoApp","useReducer","dispatch","useEffect","setItem","stringify","length","marginBottom","newtodo","console","log","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f517a6af.chunk.js","sourcesContent":["import {ADD,UPDATE,GET,DELETE, TOGGLE} from './Types'\r\n\r\nexport const todoReducer = (state=[],action) => {\r\n switch (action.type) {\r\n        case ADD: \r\n          return [...state,action.payload]\r\n        break;\r\n        case DELETE: \r\n          return [...state.filter(f=>f.id !== action.payload     )]\r\n        break;\r\n        case TOGGLE:\r\n          return state.map(\r\n              todo =>\r\n              (todo.id === action.payload)\r\n              ? {...todo,done:!todo.done}\r\n              : todo\r\n           )\r\n        break;\r\n        // case TOGGLE:\r\n        //    return state.map( todo =>{\r\n        //                 if(todo.id === action.payload)\r\n        //                 {\r\n        //                     return {...todo,done:!todo.done}\r\n        //                 }else{\r\n        //                     return todo;\r\n        //                 }\r\n        //    });\r\n        // break;\r\n        case GET: break;\r\n        case UPDATE: break;\r\n     default:\r\n         return [state];\r\n }\r\n\r\n}\r\n","export const ADD ='ADD';\r\nexport const DELETE= 'DELETE'\r\nexport const UPDATE ='UPDATE'\r\nexport const GET = 'GET'\r\nexport const TOGGLE ='TOGGLE'","import React from 'react'\r\nimport PropType from 'prop-types'\r\nexport const TodoItem = ({todo,handleToggle,handleDelete ,idx}) => {\r\n    return (\r\n        <li  key={todo.id}> \r\n        <div className=\"list-group-item row form-inline col-md-12 d-flex bd-highlight\"> \r\n             \r\n        <div className=\"col-md-9\" style={{borderBlockColor:\"red\"}}>\r\n             <p className={`${ todo.done && 'complete'  }`} onClick={ ()=> handleToggle(todo.id)  }>{idx+1}. {todo.desc}</p>\r\n        </div>\r\n         <div className=\"col-md-3 \">\r\n              <a className=\"btn btn-outline-danger btn-sm\" onClick={()=>{ handleDelete(todo.id)  }}>   <i className=\"fa fa-trash\">   </i> </a>\r\n             {/* <button className='btn btn-danger btn-sm' onClick={()=>{ handleDelete(todo.id)  }}>{\"Borrar\"}</button> */}\r\n            </div>\r\n        </div> \r\n        </li>\r\n    )\r\n}\r\n\r\n\r\nTodoItem.propTypes ={\r\n    todo:PropType.object.isRequired,\r\n    handleDelete:PropType.func.isRequired,\r\n    handleToggle:PropType.func.isRequired,\r\n    idx: PropType.number.isRequired\r\n}","import React from 'react'\r\nimport PropTypes  from 'prop-types'\r\nimport { TodoItem } from './TodoItem'\r\n\r\nexport const TodoList = ({todos,handleToggle,handleDelete}) => {\r\n    return (\r\n        <div className=\"list-group list-group-flush\">\r\n        {todos.map((t,i)=>( \r\n               <TodoItem todo={t} key={t.id}  idx={i} handleToggle={handleToggle}  handleDelete={handleDelete}  ></TodoItem>\r\n             ))}\r\n    </div>\r\n    )\r\n\r\n}\r\n\r\nTodoList.propTypes={\r\n    todos: PropTypes.array.isRequired,\r\n    handleDelete:PropTypes.func.isRequired,\r\n    handleToggle:PropTypes.func.isRequired\r\n}\r\n\r\n","    import React from 'react'\r\nimport { useForm } from './hooks/useForm';\r\n    \r\n    export const AddTodo = ({handleAdd}) => {\r\n        const [{description},handleInputChange,reset] =  useForm({ description:''  });\r\n        const handleSubmit =(f)=>{\r\n            f.preventDefault();\r\n            const newTodo ={\r\n                id: new Date().getTime(),\r\n                desc:description,\r\n                done:false\r\n            };\r\n        handleAdd(newTodo);\r\n        reset();\r\n        }\r\n\r\n\r\n        return (\r\n            <>\r\n                 <div className=\"col-md-12 form-inline\">\r\n                  <form onSubmit={handleSubmit}>\r\n                       <input placeholder=\"Descripcion\" type=\"text\" name=\"description\"\r\n                        value={description} onChange={handleInputChange} className=\"form-control\"\r\n                         style={{width:\"400px\" }}></input> \r\n                         \r\n                         <button className=\"btn btn-outline-primary\" style={{marginLeft:\"5px\"}} type=\"submit\" >Agregar</button>\r\n                  </form>\r\n                 \r\n              </div>\r\n            </>\r\n        )\r\n    }\r\n    ","import { useState } from \"react\"\r\n\r\nexport const useForm = (initialState={}) => { \r\n     const [values, setvalues] = useState(initialState)\r\n\r\n     const reset =()=>{\r\n         setvalues(initialState);\r\n     }\r\n    const handleInputChange = ({target} ) =>{\r\n        //console.log(target.value)\r\n        setvalues({...values,[target.name]:target.value})\r\n    }\r\n     return [values,handleInputChange,reset];\r\n}\r\n","import React,{useReducer, useEffect} from 'react'\r\nimport  {todoReducer} from './hooks/todoReducer'\r\nimport { ADD,UPDATE,DELETE,GET ,TOGGLE} from './hooks/Types'\r\nimport { useForm } from './hooks/useForm'\r\nimport { TodoList } from './TodoList'\r\nimport { AddTodo } from './AddTodo'\r\n\r\nconst init = () =>{\r\n\r\n  return JSON.parse(localStorage.getItem('todos')) ||[];\r\n\r\n\r\n// return [{\r\n//     id: new Date().getTime(),\r\n//     desc:'Comprar leche',\r\n//     done:false},\r\n//     ]\r\n\r\n}\r\n\r\n\r\n// const initialState = [{\r\n// id: new Date().getTime(),\r\n// desc:'Comprar leche',\r\n// done:false},\r\n// ]\r\nexport const TodoApp = () => {\r\n    \r\n   const [todos,dispatch] = useReducer(todoReducer, [],init);\r\n   useEffect(()=>{\r\n    localStorage.setItem('todos',JSON.stringify(todos));\r\n   },[todos])\r\n\r\n  \r\n    const handleToggle =(id)=>{\r\n        dispatch({\r\n            type:TOGGLE,\r\n            payload:id\r\n        });\r\n    }\r\n\r\n   const handleDelete = (id) =>{\r\n       console.log()\r\n    const action ={\r\n        type: DELETE,\r\n        payload:id\r\n    };\r\n    dispatch(action);\r\n    \r\n   }\r\n    const handleAdd = (newtodo) =>{\r\n        dispatch({ type:ADD , payload:newtodo  });\r\n    }\r\n    \r\n    return (\r\n        <div className=\"container\">\r\n            <h1>Todo App  ({todos.length})</h1>\r\n            <hr/>\r\n            <div className=\"row\" style={{marginBottom:\"10px\"}}>\r\n             <AddTodo handleAdd={handleAdd} ></AddTodo>\r\n            </div>      \r\n            <div className=\"col-md-12\" >\r\n            <TodoList todos={todos} handleDelete={handleDelete} handleToggle={handleToggle}></TodoList>\r\n            </div>\r\n           \r\n            \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { TodoApp } from './TodoApp';\n\nReactDOM.render(\n   <TodoApp></TodoApp>,\n\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}